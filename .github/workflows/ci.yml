name: CI - Deps, Compatibility & Security

on:
  push:
  pull_request:

jobs:
  deps-compat-security:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Ejercicio 1: mostrar dependencias desactualizadas (no falla el job)
      - name: Check for outdated dependencies
        run: |
          echo "== Outdated packages =="
          pip list --outdated || true

      # Ejercicio 2: compatibilidad básica (sintaxis) para todo el repo
      - name: Compile all (syntax check)
        run: python -m compileall -q .

      # (Opcional) Ejecutar tests si existen; si no, no falla
      - name: Run tests (if present)
        run: |
          if [ -d tests ] || [ -f pytest.ini ] || [ -f pyproject.toml ]; then
            pip install pytest
            pytest -q
          else
            echo "No tests found; skipping."
          fi

      # Ejercicio 3: análisis de seguridad con pip-audit
      # Usa --strict para que el job falle si hay vulnerabilidades.
      # Si prefieres que NO falle, quita --strict o añade "|| true".
      - name: Security audit (pip-audit)
        run: |
          pip install pip-audit
          pip-audit --progress-spinner=off --strict
